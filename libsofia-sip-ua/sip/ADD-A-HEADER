Description of Adding a Standard SIP Header
=========================================== 

by Pekka Pessi (2002-08-16, updated 2005-08-03)

In the text below, we use "Example" header as our example.

* Write parsing tests for your new headers in torture_sip.c...
  - Add all relevant parsing/processing cases you can think of
    at the end of function sip_header_test() or add a testing
    function of your own.

* In <sip.h>, add:

  - Add typedefs to the header structures.

    The typedefs to ordinary headers are also in more or less alphabetic
    order after typedef of sip_unknown_t. You should add a typedef line
    like this:

     typedef struct sip_example_s sip_example_t;
	
    Note that the typedefs are documented together with the
    implementation in the .c file.

  - Add field to the sip_t structure (struct sip_s)
    - remember to add a comment after field for AWK script:
      sip_example_t *sip_example; /**< Example */
    - NOTE: the AWK script msg_parser.awk automatically creates the default
      prototypes and tags for the newly created header, when the entry in
      sip_t structure is formatted like to the example above

  - Add the actual header structure:

    The header structure would look like below. The first field MUST be a
    sip_common_t structure, second field MUST be a pointer to next header
    with same name. As a convention, if there can be only one header field
    of this kind, the type of the "next" pointer is sip_error_t.

    The fields representing the header value are located after the mandatory
    fields, usually in the order they are present in the header contents. In
    this case, the Example header consist of a 32-bit integer:

       /**@ingroup sip_example
        * @brief Structure for Example header.
        */
       struct sip_example_s {
         sip_common_t   ex_common[1];	    /**< Common fragment info. */
         sip_error_t   *ex_next;	    /**< Link to next (dummy). */
         unsigned long  ex_value;	    /**< Value of example. */
       };

  [HISTORIC STEP; adding new things to sip_header_t union deprecated]

  - Add the header typedefs to the sip_header_t (also known as union
    sip_header_u):

	...
      sip_warning_t              sh_warning[1];
      sip_example_t              sh_example[1];    
	...

    The sip_header_t is pointer to any SIP header; it can be converted to
    any specific header type by referencing the union, for example:

      sip_header_t *h = ...;
      sip_example_t *ex = h->sh_example;


* Add implementation in a suitable ".c" file
  - For an simple example, see implementation of Date header in sip_basic.c
  - Add a documentation group with @defgroup
  - Document the typedef 
  - Add header class structure
  - Add parsing and printing functions:
    + sip_example_d(), sip_example_e()
  - Add functions used when copying the header structure:
    + sip_example_dup_xtra(), sip_example_dup_one()

* If you added a .c file, add to the Makefile.am

* run "make check" after you are ready 
