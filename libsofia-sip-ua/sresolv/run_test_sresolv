#! /bin/bash
#
# Run sresolv_test using our own name server
#
# --------------------------------------------------------------------
#
# This file is part of the Sofia-SIP package
#
# Copyright (C) 2005 Nokia Corporation.
#
# Contact: Pekka Pessi <pekka.pessi@nokia.com>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA
#
# --------------------------------------------------------------------
#
# Author(s): Pekka Pessi <Pekka.Pessi@nokia.com>.
#

#set -x

s=${0%/*}

test x$s = x$0 && s=`pwd`

PATH=/usr/sbin:/usr/local/sbin:/sbin:$PATH

export PATH

port=$((($$ % $((65536 - 1024))) + 1024))

ipv6='sysctl net.ipv6.conf.default.mtu >& /dev/null'

# Try to find a free port
if netstat --ip >/dev/null 2>&1 ; then
    while netstat --ip -n -a | fgrep -q ":$port "
    do
	port=$(($port + 1))
	if [$port = 65536] ; then
	    port=1024
	fi
    done
fi

listen4="listen-on port $port { 127.0.0.1; };"
ns="127.0.0.1"

if eval $ipv6 ; then
    listen6="listen-on-v6 port $port { any; };"
    ns="::1"
fi

cat > resolv.conf <<EOF
# Zeroconf subnet, reserved range - no-one should answer this
nameserver 169.254.0.2
nameserver fe80::2
nameserver $ns
domain example.com
port $port
EOF

cat > error.conf <<EOF
nameserver 0.0.0.2
nameserver 1.1.1.1.1
search example.com
port $port
EOF

cat > named.conf.tmp <<EOF
options {
	directory "$(cd $s; pwd)";
	pid-file "`pwd`/named.pid";
	notify no;
	$listen6
	$listen4
};

zone "example.com" in {
        type master;
        file "example.com";
};

zone "." in {
        type master;
        file "root.zone";
};

zone "188.2.194.in-addr.arpa" in {
        type master;
	file "194.2.188";
};

zone "0.0.127.in-addr.arpa" in {
        type master;
	file "127.zone";
};

zone "0.0.0.c.2.1.0.3.0.0.2.1.e.f.f.3.ip6.int" in {
        type master;
	file "3.f.f.e.1.2.0.0.3.0.1.2.c.0.0.0";
};

EOF

PATH="$PATH:/sbin:/usr/sbin:/usr/local/sbin"

#echo $port; sleep 200 & echo sleep pid is $! ; wait $!

type -p named >/dev/null || exit 77
#named -d5 -c named.conf.tmp || exit 77 &

named -f -d 999 -c named.conf.tmp &

echo $0: started named pid $!
for i in 1 2 3 4 5; do
    test -r named.pid && break
    sleep 1; 
done

test -r named.pid || { 
    echo $0: cannot start named >&2 ; 
    if fgrep -q -i -e SELINUX=enforcing /etc/selinux/config ; then
	echo $0: perhaps you have to disable SELinux protection for named 
    fi
    exit 77
}

function kill_named
{
    kill `cat named.pid`
}
trap kill_named EXIT

# export SOFIA_DEBUG=9

$VALGRIND ./test_sresolv "$@" - resolv.conf error.conf timeout.conf || exit 1

exit 0
